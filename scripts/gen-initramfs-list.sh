#!/bin/bash

rm -f $1

cat <<EOF >> $1
# This file is auto-generated
# Do not edit this file directly

dir /bin 755 0 0
dir /etc 755 0 0
dir /dev 755 0 0
dir /lib 755 0 0
dir /lib64 755 0 0
dir /lib64/lp64d 755 0 0
dir /proc 755 0 0
dir /sbin 755 0 0
dir /sys 755 0 0
dir /tmp 755 0 0
dir /usr 755 0 0
dir /mnt 755 0 0
dir /usr/bin 755 0 0
dir /usr/lib 755 0 0
dir /usr/sbin 755 0 0
dir /var 755 0 0
dir /var/tmp 755 0 0
dir /root 755 0 0
dir /var/log 755 0 0

nod /dev/console 644 0 0 c 5 1
nod /dev/null 644 0 0 c 1 3
EOF

LIBS=()
LIBS+=(ld-linux-riscv64-lp64d.so.1)

for lib in ${LIBS[@]}; do
    p="$RISCV/sysroot/lib/$lib"
    if [ ! -f $p ]; then
        echo "Could not find library $p"
        exit 1
    fi
    echo "file /lib/$lib $p 755 0 0" >> $1
done

LIBS=()
LIBS+=(libc.so.6)
LIBS+=(libdl.so.2)
LIBS+=(libm.so.6)
LIBS+=(libpthread.so.0)
LIBS+=(libresolv.so.2)

for lib in ${LIBS[@]}; do
    p="$RISCV/sysroot/lib64/lp64d/$lib"
    if [ ! -f $p ]; then
        echo "Could not find library $p"
        exit 1
    fi
    echo "file /lib64/lp64d/$lib $p 755 0 0" >> $1
done

cat <<EOF >> $1
file /bin/busybox ${INITRAMFS_ROOT}/bin/busybox 755 0 0
file /etc/inittab ${INITRAMFS_ROOT}/../files/etc/inittab 755 0 0
slink /init /bin/busybox 755 0 0

file /lib64/lp64d/libtirpc.so.3 ${INITRAMFS_ROOT}/lib/libtirpc.so.3 755 0 0
EOF

BINS=()
BINS+=(bw_file_rd)
BINS+=(bw_mem)
BINS+=(bw_mmap_rd)
BINS+=(bw_pipe)
BINS+=(bw_tcp)
BINS+=(bw_unix)
BINS+=(disk)
BINS+=(enough)
BINS+=(flushdisk)
BINS+=(hello)
BINS+=(lat_connect)
BINS+=(lat_ctx)
BINS+=(lat_fcntl)
BINS+=(lat_fifo)
BINS+=(lat_fs)
BINS+=(lat_http)
BINS+=(lat_mem_rd)
BINS+=(lat_mmap)
BINS+=(lat_ops)
BINS+=(lat_pagefault)
BINS+=(lat_pipe)
BINS+=(lat_proc)
BINS+=(lat_rpc)
BINS+=(lat_select)
BINS+=(lat_sem)
BINS+=(lat_sig)
BINS+=(lat_syscall)
BINS+=(lat_tcp)
BINS+=(lat_udp)
BINS+=(lat_unix)
BINS+=(lat_unix_connect)
BINS+=(line)
BINS+=(lmdd)
BINS+=(lmhttp)
BINS+=(loop_o)
BINS+=(memsize)
BINS+=(mhz)
BINS+=(msleep)
BINS+=(par_mem)
BINS+=(par_ops)
BINS+=(stream)
BINS+=(timing_o)
BINS+=(tlb)

for bin in ${BINS[@]}; do
    echo "file /bin/$bin ${INITRAMFS_ROOT}/bin/$bin 755 0 0" >> $1
done

########################################################################

# Recursively add files and subdirectories under ${INITRAMFS_ROOT}/my-dir to ramfs

target_directory="${INITRAMFS_ROOT}/my-dir"
mkdir -p ${target_directory}
log=$1

function process_directory {
  local dir="$1"

  for item in "$dir"/*; do
    if [ -d "$item" ]; then
      # 处理文件夹
      local dirname=$(basename "$item")
      local path=${item#${INITRAMFS_ROOT}}
      local permissions="755 0 0"
      echo "dir $path $permissions" >> $log
      process_directory "$item"  # 递归处理子文件夹
    elif [ -f "$item" ]; then
      # 处理文件
      local permissions="755 0 0"
      #local path=$(realpath $item)
      local path=${item#${INITRAMFS_ROOT}}
      echo "file $path $item $permissions" >> $log
    fi
  done
}

if [ $# -ne 1 ]; then
  echo "Usage: $0 DIRECTORY"
  exit 1
fi

if [ ! -d "$target_directory" ]; then
  echo "指定的目录不存在：$target_directory"
  exit 1
fi

# 处理自定义文件夹
dir_permissions="755 0 0"
abs_path=$(realpath $target_directory)
ramfs_path=${abs_path#${INITRAMFS_ROOT}}
echo "dir $ramfs_path $dir_permissions" >> $log

process_directory "$target_directory"

